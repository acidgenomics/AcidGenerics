% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutate.R
\name{mutate}
\alias{mutate}
\alias{mutateAll}
\alias{mutateAt}
\alias{mutateIf}
\alias{transmuteAt}
\alias{transmuteIf}
\title{Mutate multiple columns}
\usage{
mutateAll(object, fun, ...)

mutateAt(object, vars, fun, ...)

mutateIf(object, predicate, fun, ...)

transmuteAt(object, vars, fun, ...)

transmuteIf(object, predicate, fun, ...)
}
\arguments{
\item{object}{Object.}

\item{fun}{\code{function}.
Mutation function.}

\item{...}{Passthrough arguments to function declared in \code{fun} argument.}

\item{vars}{\code{character}.
Column names.}

\item{predicate}{\code{function}.
A predicate function to be applied to the columns.
For example, \code{is.atomic()}.}
}
\value{
Modified object.
}
\description{
Mutate multiple columns
}
\note{
Mutations are only allowed on \code{atomic} columns.
}
\examples{
class(mutateIf)
}
\seealso{
These functions are inspired by dplyr. However, they are designed to only
work on Bioconductor S4 class objects, and use base R code internally.
}
